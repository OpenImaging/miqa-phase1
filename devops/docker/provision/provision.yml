---

- hosts: local
  connection: local
  become: false
  gather_facts: false
  tasks:

  - name: Wait for Girder Server
    local_action:
      module: wait_for host="{{ ghost }}" port="{{ gport }}" delay=10

  - name: Ensure Privileged User
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      user:
        login: "{{ admin_name }}"
        password: "{{ admin_pass }}"
        firstName: Girder
        lastName: Admin
        email: "admin@girder.girder"
        admin: true
      state: present

  - name: Record Privileged User Token
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      username: "{{ admin_name }}"
      password: "{{ admin_pass }}"
      get:
        path: "user/me"
    register: admin

  - name: Ensure the Reviewer Group
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      token: "{{ admin['token'] }}"
      group:
        name: "reviewer"
        description: "The user group for Reviewer"
        users:
          - login: "{{ admin_name }}"
            type: "admin"
      state: present
    register: reviewerGroup

  - name: Ensure Default Assetstore
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      token: "{{ admin['token'] }}"
      assetstore:
        name: "Local"
        type: "filesystem"
        current: true
        root: "{{ assetstore }}"
      state: present

  - name: Ensure Default Collection
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      token: "{{ admin['token'] }}"
      collection:
        name: "miqa"
        description: "Required collection for MIQA"
        public: false
        current: true
        root: "{{ assetstore }}"
        access:
          users:
            - login: "{{ admin_name }}"
              type: admin
          groups:
            - name: reviewer
              type: moderator
      state: present

  - name: Activate Girder Plugins
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      token: "{{ admin['token'] }}"
      plugins:
        - miqa_server
        - autojoin
      state: present

  - name: Update Girder System Settings
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      token: "{{ admin['token'] }}"
      setting:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      state: present

    with_items:
      - key: "core.registration_policy"
        value: "approve"
      - key: "core.smtp_host"
        value: "{{ smtp_server }}"
      - key: "core.smtp.port"
        value: "{{ smtp_port }}"
      - key: "core.smtp.encryption"
        value: "{{ smtp_encryption }}"
      - key: "core.smtp.username"
        value: "{{ smtp_username }}"
      - key: "core.smtp.password"
        value: "{{ smtp_password }}"
      - key: "core.email_host"
        value: "{{ server_url_in_email }}"
      - key: "core.email_from_address"
        value: "{{ sender_address }}"
      - key: core.route_table
        value: 
            core_girder : /
            core_static_root : "{{ subpath }}static"
        
      - key: "autojoin"
        value:
          - groupId: "{{ reviewerGroup['gc_return']['_id'] }}"
            level: 0
            pattern: "@"

  - name: Restart Girder Server
    girder:
      host: "{{ ghost }}"
      port: "{{ gport }}"
      scheme: "{{ gscheme }}"
      token: "{{ admin['token'] }}"
      put:
        path: "system/restart"

  - name: Wait for Girder Server
    local_action:
      module: wait_for host="{{ ghost }}" port="{{ gport }}" delay=5
